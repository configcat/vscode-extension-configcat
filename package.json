{
	"name": "configcat-feature-flags",
	"displayName": "ConfigCat Feature Flags",
	"description": "ConfigCat Visual Studio Code extension to manage feature flags from Visual Studio Code.",
	"version": "1.3.0",
	"publisher": "ConfigCat",
	"repository": "https://github.com/configcat/vscode-extension-configcat",
	"preview": false,
	"engines": {
		"vscode": "^1.63.2"
	},
	"categories": [
		"Other"
	],
	"license": "MIT",
	"icon": "resources/logo.png",
	"galleryBanner": {
		"theme": "light"
	},
	"homepage": "https://configcat.com/docs/integrations/vscode",
	"keywords": [
		"Feature Flags",
		"Feature Toggles"
	],
	"activationEvents": [
		"onView:configcat.settings",
		"onView:configcat.configs",
		"onView:configcat.help",
		"onCommand:configcat.login",
		"onCommand:configcat.logout",
		"onCommand:configcat.configs.connect",
		"onCommand:configcat.configs.add",
		"onCommand:configcat.configs.refresh",
		"onCommand:configcat.settings.refresh",
		"onCommand:configcat.settings.add"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "ConfigCat",
			"properties": {
				"configcat.productId": {
					"type": "string",
					"default": "",
					"markdownDescription": "Your ConfigCat Product's Identifier."
				},
				"configcat.configId": {
					"type": "string",
					"default": "",
					"markdownDescription": "Your ConfigCat Config's Identifier."
				},
				"configcat.publicApiBaseUrl": {
					"type": "string",
					"default": "https://api.configcat.com",
					"markdownDescription": "ConfigCat Public Management Base URL. Defaults to https://api.configcat.com."
				},
				"configcat.dashboardBaseUrl": {
					"type": "string",
					"default": "https://app.configcat.com",
					"markdownDescription": "ConfigCat Dashboard Base URL. Defaults to https://app.configcat.com."
				}
			}
		},
		"viewsContainers": {
			"activitybar": [
				{
					"id": "configcat",
					"title": "ConfigCat Feature Flags",
					"icon": "resources/dark/cat.svg"
				}
			]
		},
		"views": {
			"configcat": [
				{
					"id": "configcat.settings",
					"name": "Feature Flags & Settings",
					"contextualTitle": "Feature Flags & Settings",
					"type": "tree"
				},
				{
					"id": "configcat.configs",
					"name": "Products & Configs",
					"contextualTitle": "Products & Configs",
					"type": "tree"
				},
				{
					"id": "configcat.help",
					"name": "Help & Feedback",
					"contextualTitle": "Help & Feedback",
					"visibility": "collapsed",
					"type": "tree"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "configcat.configs",
				"contents": "Initializing...",
				"when": "!configcat:initialized"
			},
			{
				"view": "configcat.configs",
				"contents": "You should authenticate first. \n [Authenticate](command:configcat.login)",
				"when": "configcat:initialized && !configcat:authenticated"
			},
			{
				"view": "configcat.settings",
				"contents": "Initializing...",
				"when": "!configcat:initialized"
			},
			{
				"view": "configcat.settings",
				"contents": "You should authenticate first. \n [Authenticate](command:configcat.login)",
				"when": "configcat:initialized && !configcat:authenticated"
			},
			{
				"view": "configcat.settings",
				"contents": "You should connect a Config to this workspace first. \n [Connect Config to Workspace](command:configcat.configs.connect)",
				"when": "configcat:initialized && configcat:authenticated && !configcat:connected"
			},
			{
				"view": "configcat.settings",
				"contents": "Could not find any Feature Flags or Setting. \n [Add Feature Flag](command:configcat.settings.add)",
				"when": "configcat:initialized && configcat:authenticated && configcat:connected"
			}
		],
		"commands": [
			{
				"command": "configcat.login",
				"title": "ConfigCat - Log In",
				"icon": "$(log-in)"
			},
			{
				"command": "configcat.logout",
				"title": "ConfigCat - Log out",
				"icon": "$(log-out)"
			},
			{
				"command": "configcat.configs.refresh",
				"title": "Refresh Configs",
				"icon": "$(refresh)"
			},
			{
				"command": "configcat.configs.connect",
				"title": "ConfigCat - Connect Config to Workspace",
				"icon": "$(plug)"
			},
			{
				"command": "configcat.configs.openInDashboard",
				"title": "ConfigCat - Open Config in ConfigCat Dashboard",
				"icon": "$(link-external)"
			},
			{
				"command": "configcat.configs.add",
				"title": "ConfigCat - Create Config",
				"icon": "$(plus)"
			},
			{
				"command": "configcat.settings.refresh",
				"title": "Refresh Feature Flags & Settings",
				"icon": "$(refresh)"
			},
			{
				"command": "configcat.settings.add",
				"title": "Add Feature Flag",
				"icon": "$(add)"
			},
			{
				"command": "configcat.settings.findUsages",
				"title": "Find usages",
				"icon": "$(search)"
			},
			{
				"command": "configcat.settings.openInDashboard",
				"title": "ConfigCat - Open Config in ConfigCat Dashboard",
				"icon": "$(link-external)"
			},
			{
				"command": "configcat.settings.copyToClipboard",
				"title": "Copy Key to clipboard",
				"icon": "$(clippy)"
			},
			{
				"command": "configcat.settings.values",
				"title": "View or Update Feature Flag values",
				"icon": "$(circuit-board)"
			}
		],
		"commandPalette": [
			{
				"command": "configcat.login",
				"when": "!configcat:authenticated"
			},
			{
				"command": "configcat.logout",
				"when": "configcat:initialized && configcat:authenticated"
			},
			{
				"command": "configcat.configs.connect",
				"when": "configcat:initialized && configcat:authenticated"
			},
			{
				"command": "configcat.configs.refresh",
				"when": "configcat:initialized && configcat:authenticated"
			},
			{
				"command": "configcat.configs.add",
				"when": "configcat:initialized && configcat:authenticated"
			},
			{
				"command": "configcat.configs.openInDashboard",
				"when": "configcat:initialized && configcat:authenticated"
			},
			{
				"command": "configcat.settings.refresh",
				"when": "configcat:initialized && configcat:authenticated && configcat:connected"
			},
			{
				"command": "configcat.settings.add",
				"when": "configcat:initialized && configcat:authenticated && configcat:connected"
			},
			{
				"command": "configcat.settings.openInDashboard",
				"when": "false"
			},
			{
				"command": "configcat.settings.findUsages",
				"when": "false"
			},
			{
				"command": "configcat.settings.copyToClipboard",
				"when": "false"
			},
			{
				"command": "configcat.settings.values",
				"when": "false"
			}
		],
		"menus": {
			"view/title": [
				{
					"command": "configcat.settings.refresh",
					"when": "configcat:initialized && configcat:authenticated && configcat:connected && view == configcat.settings",
					"group": "navigation"
				},
				{
					"command": "configcat.settings.add",
					"when": "configcat:initialized && configcat:authenticated && configcat:connected && view == configcat.settings",
					"group": "navigation"
				},
				{
					"command": "configcat.settings.openInDashboard",
					"when": "configcat:initialized && configcat:authenticated && configcat:connected && view == configcat.settings",
					"group": "navigation"
				},
				{
					"command": "configcat.configs.refresh",
					"when": "configcat:initialized && configcat:authenticated && view == configcat.configs",
					"group": "navigation"
				}
			],
			"view/item/context": [
				{
					"command": "configcat.configs.add",
					"when": "view == configcat.configs && viewItem == Product",
					"group": "inline"
				},
				{
					"command": "configcat.configs.connect",
					"when": "view == configcat.configs && viewItem == Config",
					"group": "inline"
				},
				{
					"command": "configcat.configs.openInDashboard",
					"when": "view == configcat.configs && viewItem == Config",
					"group": "inline"
				},
				{
					"command": "configcat.settings.findUsages",
					"when": "view == configcat.settings && viewItem == Setting",
					"group": "inline"
				},
				{
					"command": "configcat.settings.copyToClipboard",
					"when": "view == configcat.settings && viewItem == Setting",
					"group": "inline"
				},
				{
					"command": "configcat.settings.values",
					"when": "view == configcat.settings && viewItem == Setting",
					"group": "inline"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run -S webpanel-build && npm run -S esbuild-base -- --minify",
		"esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
		"esbuild": "npm run -S esbuild-base -- --sourcemap",
		"esbuild-watch": "npm run -S esbuild-base -- --sourcemap --watch",
		"webpanel-build": "npm run build --prefix webpanel",
		"test-compile": "tsc -p ./",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"package": "vsce package",
		"deploy": "vsce publish"
	},
	"devDependencies": {
		"@types/glob": "^7.1.3",
		"@types/mocha": "^8.0.4",
		"@types/node": "^12.11.7",
		"@types/vscode": "^1.63.2",
		"@typescript-eslint/eslint-plugin": "^4.14.1",
		"@typescript-eslint/parser": "^4.14.1",
		"esbuild": "^0.11.18",
		"eslint": "^7.19.0",
		"glob": "^7.1.6",
		"mocha": "^9.2.0",
		"typescript": "~4.4.4",
		"vsce": "^2.6.6",
		"vscode-test": "^1.6.1"
	},
	"dependencies": {
		"configcat-publicapi-node-client": "^1.0.1"
	}
}
